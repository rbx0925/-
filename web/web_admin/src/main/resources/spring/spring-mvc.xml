<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--将spring-registry引入到spring-mvc中   引入进来就相当于将其内容复制到该文件内-->
    <import resource="spring-registry.xml"/>

    <!--controller包的注解扫描-->
    <context:component-scan base-package="com.atguigu"/>
    <!--Thymeleaf的视图解析器:复制粘贴-->
    <!--配置视图解析器 ：Thymeleaf  SpringBoot之后是不需要自己配置-->
    <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver" id="viewResolver">
        <!--配置字符集属性-->
        <property name="characterEncoding" value="UTF-8"></property>
        <!--配置模板引擎属性-->
        <property name="templateEngine">
            <!--配置内部bean-->
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <!--配置模块的解析器属性-->
                <property name="templateResolver">
                    <!--配置内部bean-->
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!--配置前缀  ★-->
                        <property name="prefix" value="/WEB-INF/pages/"></property>
                        <!--配置后缀  ★-->
                        <property name="suffix" value=".html"></property>
                        <!--配置字符集-->
                        <property name="characterEncoding" value="UTF-8"></property>
                    </bean>
                </property>
                <!--
                    templateResolver的下面添加
                    添加spring security 标签支持：sec
                -->
                <property name="additionalDialects">
                    <set>
                        <bean class="org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect" />
                    </set>
                </property>
            </bean>
        </property>
    </bean>
    <!--暂时先这么写：首页访问-->
<!--    <mvc:view-controller path="index.html" view-name="frame/index"/>-->
    <mvc:view-controller path="main" view-name="frame/main"/>

    <!--静态资源访问-->
    <mvc:default-servlet-handler/>
    <!--mvc的驱动设置  需要设置一个内容：fastjson转换器的添加   jackson的时候我讲过-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 配置Fastjson支持 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--配置上传解析器   SpringMVC上传位置讲过
"maxUploadSize":表示文件大小，图片的大小
"maxInMemorySize" ：图片加载到内存当中的大小 长 * 宽 * 像素字节数(argb8888,rgb565,argb4444)
 "defaultEncoding":UTF-8
-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设定文件上传的最大值为100MB，100*1024*1024 -->
        <property name="maxUploadSize" value="104857600" />
        <!-- 设定文件上传时写入内存的最大值，如果小于这个参数不会生成临时文件，默认为10240 -->
        <property name="maxInMemorySize" value="4096" />
        <!-- 设定默认编码 -->
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
</beans>